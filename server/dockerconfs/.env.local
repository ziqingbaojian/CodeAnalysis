# 服务交互
DAEMON=false
MAIN_SERVER_URL=http://main-server:8001
ANALYSE_SERVER_URL=http://analysis-server:8002
LOGIN_SERVER_URL=http://login-server:8003
FILE_SERVER_URL=http://nginx:8000/files/
SCMPROXY=http://scmproxy:8009

SERVER_ACCESS_LOG=-
SERVER_ERROR_LOG=-

# Client配置
CODEDOG_SERVER=http://nginx:8000/main/
FILE_SERVER_URL=http://nginx:8000/files/

# Main工程配置
## 框架配置
## Notice：默认的SECRET_KEY仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码： from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())
## 步骤三：获取执行输出，拷贝替换下方的MAIN_SECRET_KEY
MAIN_DEBUG_MODE=true
MAIN_SECRET_KEY='lh+6y8pyf16bbor*)p=kp=p(cg615+y+5nnin$l(n%os$8z^v%'
HTTPS_CLONE_FLAG=true

## 服务DB配置
MAIN_DB_NAME=codedog_main
MAIN_DB_USER=root
MAIN_DB_PASSWORD='TCA!@#2021'
MAIN_DB_HOST=mysql
MAIN_DB_PORT=3306

## 服务Redis配置
MAIN_REDIS_HOST=redis
MAIN_REDIS_PORT=6379
MAIN_REDIS_PASSWD=
MAIN_REDIS_DBID=1

## 日志上报至sentry配置
MAIN_SENTRY_DSN=

## 服务交互配置
## Notice：默认的KEY和Token仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码 import random, string; print(''.join(random.sample(string.ascii_lowercase + string.digits, 16)))
## 步骤三：获取执行输出，拷贝替换下方的PASSWORD_KEY和API_TICKET_SALT
PASSWORD_KEY=a6x4c7esudcv396w
API_TICKET_SALT=a6x4c7esudcv396w
API_TICKET_TOKEN=tca@public@2021
FILE_SERVER_TOKEN=0712b895f30c5e958ec71a7c22e1b1a2ad1d5c6b
CODEDOG_TOKEN=0712b895f30c5e958ec71a7c22e1b1a2ad1d5c6b
SCMPROXY_TIMEOUT=300

# Analysis工程配置
## Notice：默认的SECRET_KEY仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码： from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())
## 步骤三：获取执行输出，拷贝替换下方的ANALYSIS_SECRET_KEY
ANALYSIS_DEBUG_MODE=true
ANALYSIS_SECRET_KEY='25n=e*_e=4q!ert$4u#9v&^2n+)_#mi7&7ll@x29@j=w=k^q@^'

## 服务DB配置
ANALYSIS_DB_NAME=codedog_analysis
ANALYSIS_DB_USER=root
ANALYSIS_DB_PASSWORD='TCA!@#2021'
ANALYSIS_DB_HOST=mysql
ANALYSIS_DB_PORT=3306

## 服务Redis配置
ANALYSIS_REDIS_HOST=redis
ANALYSIS_REDIS_PORT=6379
ANALYSIS_REDIS_PASSWD=
ANALYSIS_REDIS_DBID=0

## 日志上报至sentry配置
ANALYSIS_SENTRY_DSN=

## 服务交互配置
## Notice：默认的KEY和Token仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码 import random, string; print(''.join(random.sample(string.ascii_lowercase + string.digits, 16)))
## 步骤三：获取执行输出，拷贝替换下方的PASSWORD_KEY和API_TICKET_SALT
API_TICKET_SALT=a6x4c7esudcv396w
API_TICKET_TOKEN=tca@public@2021
FILE_SERVER_TOKEN=0712b895f30c5e958ec71a7c22e1b1a2ad1d5c6b


# Login工程配置
## Notice：默认的SECRET_KEY仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码： from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())
## 步骤三：获取执行输出，拷贝替换下方的LOGIN_SECRET_KEY
LOGIN_DEBUG_MODE=true
LOGIN_SECRET_KEY='iht%_(ixb)w&sedrh2t-ydxnre)uy+=_hv4v^8m@19p27r6sz_'
# 默认的账号密码
TCA_DEFAULT_ADMIN=CodeDog
TCA_DEFAULT_PASSWORD=admin

## 服务DB配置
LOGIN_DB_NAME=codedog_login
LOGIN_DB_USER=root
LOGIN_DB_PASSWORD='TCA!@#2021'
LOGIN_DB_HOST=mysql
LOGIN_DB_PORT=3306


## 服务交互配置
## Notice：默认的KEY和Token仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码 import random, string; print(''.join(random.sample(string.ascii_lowercase + string.digits, 16)))
## 步骤三：获取执行输出，拷贝替换下方的PASSWORD_KEY和API_TICKET_SALT
PASSWORD_KEY=a6x4c7esudcv396w
API_TICKET_SALT=a6x4c7esudcv396w
API_TICKET_TOKEN=tca@public@2021


# File工程配置
## Notice：默认的SECRET_KEY仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码： from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())
## 步骤三：获取执行输出，拷贝替换下方的FILEs_SECRET_KEY
FILE_SECRET_KEY='8b_!6t@kb=63c)4#e^0wub=x8%xd9624jm@#eiv3y#%b_%4!n='

## 服务DB配置
FILE_DB_NAME=codedog_file
FILE_DB_USER=root
FILE_DB_PASSWORD='TCA!@#2021'
FILE_DB_HOST=mysql
FILE_DB_PORT=3306

## 日志上报至sentry配置
FILE_SENTRY_DSN=

## 上报文件存储位置
FILE_STORAGE_DIR=data/file/

## 服务交互配置
## Notice：默认的KEY和Token仅测试用途，如在正式环境部署请重新生成
## 生成方式：
## 步骤一：执行 python 命令
## 步骤二：输入代码 import random, string; print(''.join(random.sample(string.ascii_lowercase + string.digits, 16)))
## 步骤三：获取执行输出，拷贝替换下方的PASSWORD_KEY和API_TICKET_SALT
PASSWORD_KEY=a6x4c7esudcv396w
API_TICKET_SALT=a6x4c7esudcv396w
API_TICKET_TOKEN=tca@public@2021

## ScmProxy
SCMPROXY_HOST=0.0.0.0
SCMPROXY_PORT=8009

## LDAP相关配置
## Notice：如果要开启LDAP 认证，请根据实际情况配置以下参数
## LDAP_ENABLE  默认关闭，开启请设置为true
## LDAP_BIND_DN  LDAP管理员账号，如果允许匿名访问则不需要设置
## LDAP_BIND_PASSWORD  LDAP管理员密码 如果允许匿名访问则不需要设置
## LDAP_SERVER  ldap服务器地址
## LDAP_PORT  ldap默认端口号 389 如果需要更改请重新设置
## LDAP_BASE_DN  ldap 基础 DN
## LDAP_USER_SEARCH_FILTER  用户搜索过滤器

export LDAP_ENABLE=${LDAP_ENABLE:-false}
export LDAP_BIND_DN=""
export LDAP_BIND_PASSWORD=""
export LDAP_SERVER=""
export LDAP_PORT=389
export LDAP_BASE_DN=""
export LDAP_USER_SEARCH_FILTER=""