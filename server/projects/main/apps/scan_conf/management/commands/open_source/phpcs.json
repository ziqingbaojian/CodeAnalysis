[
    {
        "name": "phpcs",
        "display_name": "PhpCs",
        "description": "php static analyzer.",
        "license": "",
        "libscheme_set": [],
        "task_processes": [
            "analyze",
            "datahandle"
        ],
        "scan_app": "codelint",
        "scm_url": "custom-phpcs",
        "run_cmd": "python main.py",
        "envs": "",
        "build_flag": false,
        "checkrule_set": [
            {
                "real_name": "Generic.Commenting.DocComment.ContentBeforeClose",
                "display_name": "GenericCommentingDocCommentContentBeforeClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.Empty",
                "display_name": "GenericCommentingDocCommentEmpty",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.LongNotCapital",
                "display_name": "GenericCommentingDocCommentLongNotCapital",
                "severity": "warning",
                "category": "convention",
                "rule_title": "",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": null,
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.MissingShort",
                "display_name": "GenericCommentingDocCommentMissingShort",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.NonParamGroup",
                "display_name": "GenericCommentingDocCommentNonParamGroup",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.ParamGroup",
                "display_name": "GenericCommentingDocCommentParamGroup",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.ParamNotFirst",
                "display_name": "GenericCommentingDocCommentParamNotFirst",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.ShortNotCapital",
                "display_name": "GenericCommentingDocCommentShortNotCapital",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.SpacingAfter",
                "display_name": "GenericCommentingDocCommentSpacingAfter",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.SpacingAfterTagGroup",
                "display_name": "GenericCommentingDocCommentSpacingAfterTagGroup",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.SpacingBeforeShort",
                "display_name": "GenericCommentingDocCommentSpacingBeforeShort",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.SpacingBeforeTags",
                "display_name": "GenericCommentingDocCommentSpacingBeforeTags",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.SpacingBetween",
                "display_name": "GenericCommentingDocCommentSpacingBetween",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.TagsNotGrouped",
                "display_name": "GenericCommentingDocCommentTagsNotGrouped",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.Commenting.DocComment.TagValueIndent",
                "display_name": "GenericCommentingDocCommentTagValueIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures doc blocks follow basic formatting.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures doc blocks follow basic formatting.",
                "disable": false
            },
            {
                "real_name": "Generic.ControlStructures.InlineControlStructure.Discouraged",
                "display_name": "GenericControlStructuresInlineControlStructureDiscouraged",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that inline control statements are not present.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that inline control statements are not present.",
                "disable": false
            },
            {
                "real_name": "Generic.ControlStructures.InlineControlStructure.NotAllowed",
                "display_name": "GenericControlStructuresInlineControlStructureNotAllowed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that inline control statements are not present.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that inline control statements are not present.",
                "disable": false
            },
            {
                "real_name": "Generic.Files.ByteOrderMark.Found",
                "display_name": "GenericFilesByteOrderMarkFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "A simple sniff for detecting BOMs that may corrupt application work.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "A simple sniff for detecting BOMs that may corrupt application work.",
                "disable": false
            },
            {
                "real_name": "Generic.Files.LineEndings.InvalidEOLChar",
                "display_name": "GenericFilesLineEndingsInvalidEOLChar",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that end of line characters are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that end of line characters are correct.",
                "disable": false
            },
            {
                "real_name": "Generic.Files.LineLength.MaxExceeded",
                "display_name": "GenericFilesLineLengthMaxExceeded",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the length of all lines in a file.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the length of all lines in a file.",
                "disable": false
            },
            {
                "real_name": "Generic.Files.LineLength.TooLong",
                "display_name": "GenericFilesLineLengthTooLong",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the length of all lines in a file.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the length of all lines in a file.",
                "disable": false
            },
            {
                "real_name": "Generic.Formatting.DisallowMultipleStatements.SameLine",
                "display_name": "GenericFormattingDisallowMultipleStatementsSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures each statement is on a line by itself.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures each statement is on a line by itself.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma",
                "display_name": "GenericFunctionsFunctionCallArgumentSpacingNoSpaceAfterComma",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that calls to methods and functions are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that calls to methods and functions are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals",
                "display_name": "GenericFunctionsFunctionCallArgumentSpacingNoSpaceAfterEquals",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that calls to methods and functions are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that calls to methods and functions are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals",
                "display_name": "GenericFunctionsFunctionCallArgumentSpacingNoSpaceBeforeEquals",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that calls to methods and functions are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that calls to methods and functions are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma",
                "display_name": "GenericFunctionsFunctionCallArgumentSpacingSpaceBeforeComma",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that calls to methods and functions are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that calls to methods and functions are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma",
                "display_name": "GenericFunctionCallArgumentSpacingTooMuchSpaceAfterComma",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that calls to methods and functions are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that calls to methods and functions are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent",
                "display_name": "GenericFunctionsOpeningFunctionBraceBsdAllmanBraceIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the opening brace of a function is on the line after the function declaration.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the opening brace of a function is on the line after the function declaration.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine",
                "display_name": "GenericFunctionsOpeningFunctionBraceBsdAllmanBraceOnSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the opening brace of a function is on the line after the function declaration.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the opening brace of a function is on the line after the function declaration.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing",
                "display_name": "GenericFunctionsOpeningFunctionBraceBsdAllmanBraceSpacing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the opening brace of a function is on the line after the function declaration.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the opening brace of a function is on the line after the function declaration.",
                "disable": false
            },
            {
                "real_name": "Generic.Functions.OpeningFunctionBraceBsdAllman.ContentAfterBrace",
                "display_name": "GenericFunctionsOpeningFunctionBraceBsdAllmanContentAfterBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the opening brace of a function is on the line after the function declaration.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the opening brace of a function is on the line after the function declaration.",
                "disable": false
            },
            {
                "real_name": "Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase",
                "display_name": "GenericUpperCaseConstantNameClassConstantNotUpperCase",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures that constant names are all uppercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures that constant names are all uppercase.",
                "disable": false
            },
            {
                "real_name": "Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase",
                "display_name": "GenericUpperCaseConstantNameConstantNotUpperCase",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures that constant names are all uppercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures that constant names are all uppercase.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.DisallowShortOpenTag.EchoFound",
                "display_name": "GenericPHPDisallowShortOpenTagEchoFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Makes sure that shorthand PHP open tags are not used.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Makes sure that shorthand PHP open tags are not used.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.DisallowShortOpenTag.Found",
                "display_name": "GenericPHPDisallowShortOpenTagFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Makes sure that shorthand PHP open tags are not used.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Makes sure that shorthand PHP open tags are not used.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.DisallowShortOpenTag.PossibleFound",
                "display_name": "GenericPHPDisallowShortOpenTagPossibleFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Makes sure that shorthand PHP open tags are not used.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Makes sure that shorthand PHP open tags are not used.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.LowerCaseConstant.Found",
                "display_name": "GenericPHPLowerCaseConstantFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that all uses of true, false and null are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that all uses of true, false and null are lowercase.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.LowerCaseKeyword.Found",
                "display_name": "GenericPHPLowerCaseKeywordFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that all PHP keywords are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that all PHP keywords are lowercase.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.LowerCaseType.ParamTypeFound",
                "display_name": "GenericPHPLowerCaseTypeParamTypeFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that all PHP types are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that all PHP types are lowercase.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.LowerCaseType.ReturnTypeFound",
                "display_name": "GenericPHPLowerCaseTypeReturnTypeFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that all PHP types are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that all PHP types are lowercase.",
                "disable": false
            },
            {
                "real_name": "Generic.PHP.LowerCaseType.TypeCastFound",
                "display_name": "GenericPHPLowerCaseTypeTypeCastFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that all PHP types are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that all PHP types are lowercase.",
                "disable": false
            },
            {
                "real_name": "Generic.WhiteSpace.DisallowTabIndent.NonIndentTabsUsed",
                "display_name": "GenericWhiteSpaceDisallowTabIndentNonIndentTabsUsed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Throws errors if tabs are used for indentation.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Throws errors if tabs are used for indentation.",
                "disable": false
            },
            {
                "real_name": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
                "display_name": "GenericWhiteSpaceDisallowTabIndentTabsUsed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Throws errors if tabs are used for indentation.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Throws errors if tabs are used for indentation.",
                "disable": false
            },
            {
                "real_name": "Generic.WhiteSpace.ScopeIndent.Incorrect",
                "display_name": "GenericWhiteSpaceScopeIndentIncorrect",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures are defined and indented correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures are defined and indented correctly.",
                "disable": false
            },
            {
                "real_name": "Generic.WhiteSpace.ScopeIndent.IncorrectExact",
                "display_name": "GenericWhiteSpaceScopeIndentIncorrectExact",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures are defined and indented correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures are defined and indented correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Classes.ClassDeclaration.MissingBrace",
                "display_name": "PEARClassesClassDeclarationMissingBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.Classes.ClassDeclaration.OpenBraceNewLine",
                "display_name": "PEARClassesClassDeclarationOpenBraceNewLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.Classes.ClassDeclaration.OpenBraceNotAlone",
                "display_name": "PEARClassesClassDeclarationOpenBraceNotAlone",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.Classes.ClassDeclaration.OpenBraceWrongLine",
                "display_name": "PEARClassesClassDeclarationOpenBraceWrongLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.Classes.ClassDeclaration.SpaceBeforeBrace",
                "display_name": "PEARClassesClassDeclarationSpaceBeforeBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.ClassComment.InvalidVersion",
                "display_name": "PEARCommentingClassCommentInvalidVersion",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for classes.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for classes.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.ClassComment.Missing",
                "display_name": "PEARCommentingClassCommentMissing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for classes.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for classes.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.ClassComment.WrongStyle",
                "display_name": "PEARCommentingClassCommentWrongStyle",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for classes.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for classes.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.CopyrightHyphen",
                "display_name": "PEARCommentingFileCommentCopyrightHyphen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.Duplicate",
                "display_name": "PEARCommentingFileCommentDuplicate",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.Empty",
                "display_name": "PEARCommentingFileCommentEmpty",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.IncompleteCopyright",
                "display_name": "PEARCommentingFileCommentIncompleteCopyright",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.IncompleteLicense",
                "display_name": "PEARCommentingFileCommentIncompleteLicense",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidAuthors",
                "display_name": "PEARCommentingFileCommentInvalidAuthors",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidCategory",
                "display_name": "PEARCommentingFileCommentInvalidCategory",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidCopyright",
                "display_name": "PEARCommentingFileCommentInvalidCopyright",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidPackage",
                "display_name": "PEARCommentingFileCommentInvalidPackage",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidPackageValue",
                "display_name": "PEARCommentingFileCommentInvalidPackageValue",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidSubpackage",
                "display_name": "PEARCommentingFileCommentInvalidSubpackage",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.InvalidVersion",
                "display_name": "PEARCommentingFileCommentInvalidVersion",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.Missing",
                "display_name": "PEARCommentingFileCommentMissing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.MissingVersion",
                "display_name": "PEARCommentingFileCommentMissingVersion",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FileComment.WrongStyle",
                "display_name": "PEARCommentingFileCommentWrongStyle",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for files.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for files.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.DuplicateReturn",
                "display_name": "PEARCommentingFunctionCommentDuplicateReturn",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.EmptySees",
                "display_name": "PEARCommentingFunctionCommentEmptySees",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.ExtraParamComment",
                "display_name": "PEARCommentingFunctionCommentExtraParamComment",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.InvalidThrows",
                "display_name": "PEARCommentingFunctionCommentInvalidThrows",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.Missing",
                "display_name": "PEARCommentingFunctionCommentMissing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.MissingParamComment",
                "display_name": "PEARCommentingFunctionCommentMissingParamComment",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.MissingParamName",
                "display_name": "PEARCommentingFunctionCommentMissingParamName",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.MissingParamTag",
                "display_name": "PEARCommentingFunctionCommentMissingParamTag",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.MissingParamType",
                "display_name": "PEARCommentingFunctionCommentMissingParamType",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.MissingReturn",
                "display_name": "PEARCommentingFunctionCommentMissingReturn",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.MissingReturnType",
                "display_name": "PEARCommentingFunctionCommentMissingReturnType",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.SpacingAfter",
                "display_name": "PEARCommentingFunctionCommentSpacingAfter",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.SpacingAfterParamName",
                "display_name": "PEARCommentingFunctionCommentSpacingAfterParamName",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.SpacingAfterParamType",
                "display_name": "PEARCommentingFunctionCommentSpacingAfterParamType",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.FunctionComment.WrongStyle",
                "display_name": "PEARCommentingFunctionCommentWrongStyle",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Parses and verifies the doc comments for functions.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Parses and verifies the doc comments for functions.",
                "disable": false
            },
            {
                "real_name": "PEAR.Commenting.InlineComment.WrongStyle",
                "display_name": "PEARCommentingInlineCommentWrongStyle",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that no Perl-style comments are used.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that no Perl-style comments are used.",
                "disable": false
            },
            {
                "real_name": "PEAR.ControlStructures.MultiLineCondition.Alignment",
                "display_name": "PEARControlStructuresMultiLineConditionAlignment",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure multi-line IF conditions are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure multi-line IF conditions are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine",
                "display_name": "PEARControlStructuresMultiLineConditionCloseBracketNewLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure multi-line IF conditions are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure multi-line IF conditions are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.ControlStructures.MultiLineCondition.SpacingAfterOpenBrace",
                "display_name": "PEARControlStructuresMultiLineConditionSpacingAfterOpenBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure multi-line IF conditions are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure multi-line IF conditions are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.ControlStructures.MultiLineCondition.StartWithBoolean",
                "display_name": "PEARControlStructuresMultiLineConditionStartWithBoolean",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure multi-line IF conditions are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure multi-line IF conditions are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Files.IncludingFile.BracketsNotRequired",
                "display_name": "PEARFilesIncludingFileBracketsNotRequired",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "disable": false
            },
            {
                "real_name": "PEAR.Files.IncludingFile.UseInclude",
                "display_name": "PEARFilesIncludingFileUseInclude",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "disable": false
            },
            {
                "real_name": "PEAR.Files.IncludingFile.UseIncludeOnce",
                "display_name": "PEARFilesIncludingFileUseIncludeOnce",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "disable": false
            },
            {
                "real_name": "PEAR.Files.IncludingFile.UseRequire",
                "display_name": "PEARFilesIncludingFileUseRequire",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "disable": false
            },
            {
                "real_name": "PEAR.Files.IncludingFile.UseRequireOnce",
                "display_name": "PEARFilesIncludingFileUseRequireOnce",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure include_once is used in conditional situations and require_once is used elsewhere.",
                "disable": false
            },
            {
                "real_name": "PEAR.Formatting.MultiLineAssignment.EqualSignLine",
                "display_name": "PEARFormattingMultiLineAssignmentEqualSignLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "If an assignment goes over two lines, ensure the equal sign is indented.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "If an assignment goes over two lines, ensure the equal sign is indented.",
                "disable": false
            },
            {
                "real_name": "PEAR.Formatting.MultiLineAssignment.Indent",
                "display_name": "PEARFormattingMultiLineAssignmentIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "If an assignment goes over two lines, ensure the equal sign is indented.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "If an assignment goes over two lines, ensure the equal sign is indented.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.CloseBracketLine",
                "display_name": "PEARFunctionsFunctionCallSignatureCloseBracketLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket",
                "display_name": "PEARFunctionsFunctionCallSignatureContentAfterOpenBracket",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.EmptyLine",
                "display_name": "PEARFunctionsFunctionCallSignatureEmptyLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.Indent",
                "display_name": "PEARFunctionsFunctionCallSignatureIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.MultipleArguments",
                "display_name": "PEARFunctionsFunctionCallSignatureMultipleArguments",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.OpeningIndent",
                "display_name": "PEARFunctionsFunctionCallSignatureOpeningIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket",
                "display_name": "PEARFunctionsFunctionCallSignatureSpaceAfterCloseBracket",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket",
                "display_name": "PEARFunctionsFunctionCallSignatureSpaceAfterOpenBracket",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket",
                "display_name": "PEARFunctionsFunctionCallSignatureSpaceBeforeCloseBracket",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket",
                "display_name": "PEARFunctionsFunctionCallSignatureSpaceBeforeOpenBracket",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function calls are formatted correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function calls are formatted correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.CloseBracketLine",
                "display_name": "PEARFunctionsFunctionDeclarationCloseBracketLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.EmptyLine",
                "display_name": "PEARFunctionsFunctionDeclarationEmptyLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.Indent",
                "display_name": "PEARFunctionsFunctionDeclarationIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.NewlineBeforeOpenBrace",
                "display_name": "PEARFunctionsFunctionDeclarationNewlineBeforeOpenBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.SpaceAfterFunction",
                "display_name": "PEARFunctionsFunctionDeclarationSpaceAfterFunction",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.SpaceAfterUse",
                "display_name": "PEARFunctionsFunctionDeclarationSpaceAfterUse",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.SpaceBeforeOpenBrace",
                "display_name": "PEARFunctionsFunctionDeclarationSpaceBeforeOpenBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.SpaceBeforeOpenParen",
                "display_name": "PEARFunctionsFunctionDeclarationSpaceBeforeOpenParen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.SpaceBeforeSemicolon",
                "display_name": "PEARFunctionsFunctionDeclarationSpaceBeforeSemicolon",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.SpaceBeforeUse",
                "display_name": "PEARFunctionsFunctionDeclarationSpaceBeforeUse",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.FunctionDeclaration.UseCloseBracketLine",
                "display_name": "PEARFunctionsFunctionDeclarationUseCloseBracketLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure single and multi-line function declarations are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure single and multi-line function declarations are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.Functions.ValidDefaultValue.NotAtEnd",
                "display_name": "PEARFunctionsValidDefaultValueNotAtEnd",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures function params with default values are at the end of the declaration.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures function params with default values are at the end of the declaration.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidClassName.Invalid",
                "display_name": "PEARNamingConventionsValidClassNameInvalid",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures class and interface names start with a capital letter and use _ separators.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures class and interface names start with a capital letter and use _ separators.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidClassName.StartWithCapital",
                "display_name": "PEARNamingConventionsValidClassNameStartWithCapital",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures class and interface names start with a capital letter and use _ separators.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures class and interface names start with a capital letter and use _ separators.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore",
                "display_name": "PEARNamingConventionsValidFunctionNameFunctionDoubleUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.FunctionInvalid",
                "display_name": "PEARNamingConventionsValidFunctionNameFunctionInvalid",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid",
                "display_name": "PEARNamingConventionsValidFunctionNameFunctionNameInvalid",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.FunctionNoCapital",
                "display_name": "PEARNamingConventionsValidFunctionNameFunctionNoCapital",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore",
                "display_name": "PEARNamingConventionsValidFunctionNameFunctionUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore",
                "display_name": "PEARNamingConventionsValidFunctionNameMethodDoubleUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.NotCamelCaps",
                "display_name": "PEARNamingConventionsValidFunctionNameNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore",
                "display_name": "PEARNamingConventionsValidFunctionNamePrivateNoUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.PublicUnderscore",
                "display_name": "PEARNamingConventionsValidFunctionNamePublicUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps",
                "display_name": "PEARNamingConventionsValidFunctionNameScopeNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method and function names are correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method and function names are correct.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore",
                "display_name": "PEARNamingConventionsValidVariableNamePrivateNoUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of member variables.",
                "disable": false
            },
            {
                "real_name": "PEAR.NamingConventions.ValidVariableName.PublicUnderscore",
                "display_name": "PEARNamingConventionsValidVariableNamePublicUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of member variables.",
                "disable": false
            },
            {
                "real_name": "PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect",
                "display_name": "PEARWhiteSpaceObjectOperatorIndentIncorrect",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that object operators are indented correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that object operators are indented correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine",
                "display_name": "PEARWhiteSpaceObjectOperatorIndentStartOfLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that object operators are indented correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that object operators are indented correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.WhiteSpace.ScopeClosingBrace.BreakIndent",
                "display_name": "PEARWhiteSpaceScopeClosingBraceBreakIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the closing braces of scopes are aligned correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the closing braces of scopes are aligned correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.WhiteSpace.ScopeClosingBrace.Indent",
                "display_name": "PEARWhiteSpaceScopeClosingBraceIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the closing braces of scopes are aligned correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the closing braces of scopes are aligned correctly.",
                "disable": false
            },
            {
                "real_name": "PEAR.WhiteSpace.ScopeClosingBrace.Line",
                "display_name": "PEARWhiteSpaceScopeClosingBraceLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the closing braces of scopes are aligned correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the closing braces of scopes are aligned correctly.",
                "disable": false
            },
            {
                "real_name": "PSR1.Classes.ClassDeclaration.MissingNamespace",
                "display_name": "PSR1ClassesClassDeclarationMissingNamespace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PSR1.Classes.ClassDeclaration.MultipleClasses",
                "display_name": "PSR1ClassesClassDeclarationMultipleClasses",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class is correct.",
                "disable": false
            },
            {
                "real_name": "PSR1.Files.SideEffects.FoundWithSymbols",
                "display_name": "PSR1FilesSideEffectsFoundWithSymbols",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures a file declares new symbols and causes no other side effects, or executes logic with side effects, but not both.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures a file declares new symbols and causes no other side effects, or executes logic with side effects, but not both.",
                "disable": false
            },
            {
                "real_name": "PSR1.Methods.CamelCapsMethodName.NotCamelCaps",
                "display_name": "PSR1MethodsCamelCapsMethodNameNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures method names are defined using camel case.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures method names are defined using camel case.",
                "disable": false
            },
            {
                "real_name": "PSR12.Classes.ClassInstantiation.MissingParentheses",
                "display_name": "PSR12ClassesClassInstantiationMissingParentheses",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that classes are instantiated with parentheses.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that classes are instantiated with parentheses.",
                "disable": false
            },
            {
                "real_name": "PSR12.Functions.NullableTypeDeclaration.UnexpectedCharactersFound",
                "display_name": "PSR12FunctionsNullableTypeDeclarationUnexpectedCharactersFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that nullable typehints are lacking superfluous whitespace, e.g. ?int",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that nullable typehints are lacking superfluous whitespace, e.g. ?int",
                "disable": false
            },
            {
                "real_name": "PSR12.Functions.NullableTypeDeclaration.WhitespaceFound",
                "display_name": "PSR12FunctionsNullableTypeDeclarationWhitespaceFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that nullable typehints are lacking superfluous whitespace, e.g. ?int",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that nullable typehints are lacking superfluous whitespace, e.g. ?int",
                "disable": false
            },
            {
                "real_name": "PSR12.Keywords.ShortFormTypeKeywords.LongFound",
                "display_name": "PSR12KeywordsShortFormTypeKeywordsLongFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that the short form of type keywords is used (e.g., int, bool).",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that the short form of type keywords is used (e.g., int, bool).",
                "disable": false
            },
            {
                "real_name": "PSR12.Namespaces.CompoundNamespaceDepth.TooDeep",
                "display_name": "PSR12NamespacesCompoundNamespaceDepthTooDeep",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that compound namespaces are not defined too deep.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that compound namespaces are not defined too deep.",
                "disable": false
            },
            {
                "real_name": "PSR12.Operators.OperatorSpacing.NoSpaceAfter",
                "display_name": "PSR12OperatorsOperatorSpacingNoSpaceAfter",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that operators have valid spacing surrounding them.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that operators have valid spacing surrounding them.",
                "disable": false
            },
            {
                "real_name": "PSR12.Operators.OperatorSpacing.NoSpaceBefore",
                "display_name": "PSR12OperatorsOperatorSpacingNoSpaceBefore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that operators have valid spacing surrounding them.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that operators have valid spacing surrounding them.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.CloseBraceAfterBody",
                "display_name": "PSR2ClassesClassDeclarationCloseBraceAfterBody",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.CloseBraceSameLine",
                "display_name": "PSR2ClassesClassDeclarationCloseBraceSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.ExtendsInterfaceSameLine",
                "display_name": "PSR2ClassesClassDeclarationExtendsInterfaceSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.FirstExtendsInterfaceSameLine",
                "display_name": "PSR2ClassesClassDeclarationFirstExtendsInterfaceSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.FirstInterfaceSameLine",
                "display_name": "PSR2ClassesClassDeclarationFirstInterfaceSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.InterfaceSameLine",
                "display_name": "PSR2ClassesClassDeclarationInterfaceSameLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.InterfaceWrongIndent",
                "display_name": "PSR2ClassesClassDeclarationInterfaceWrongIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.NewlineBeforeKeyword",
                "display_name": "PSR2ClassesClassDeclarationNewlineBeforeKeyword",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.NoSpaceBeforeName",
                "display_name": "PSR2ClassesClassDeclarationNoSpaceBeforeName",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.SpaceAfterKeyword",
                "display_name": "PSR2ClassesClassDeclarationSpaceAfterKeyword",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.SpaceAfterName",
                "display_name": "PSR2ClassesClassDeclarationSpaceAfterName",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.SpaceBefore",
                "display_name": "PSR2ClassesClassDeclarationSpaceBefore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.SpaceBeforeComma",
                "display_name": "PSR2ClassesClassDeclarationSpaceBeforeComma",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.SpaceBeforeKeyword",
                "display_name": "PSR2ClassesClassDeclarationSpaceBeforeKeyword",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.ClassDeclaration.SpaceBeforeName",
                "display_name": "PSR2ClassesClassDeclarationSpaceBeforeName",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the declaration of the class and its inheritance is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the declaration of the class and its inheritance is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.PropertyDeclaration.Multiple",
                "display_name": "PSR2ClassesPropertyDeclarationMultiple",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that properties are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that properties are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.PropertyDeclaration.ScopeMissing",
                "display_name": "PSR2ClassesPropertyDeclarationScopeMissing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that properties are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that properties are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.PropertyDeclaration.StaticBeforeVisibility",
                "display_name": "PSR2ClassesPropertyDeclarationStaticBeforeVisibility",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that properties are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that properties are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.PropertyDeclaration.Underscore",
                "display_name": "PSR2ClassesPropertyDeclarationUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that properties are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that properties are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Classes.PropertyDeclaration.VarUsed",
                "display_name": "PSR2ClassesPropertyDeclarationVarUsed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that properties are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that properties are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace",
                "display_name": "PSR2ControlStructureSpacingSpaceBeforeCloseBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace",
                "display_name": "PSR2ControlStructureSpacingSpacingAfterOpenBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.ElseIfDeclaration.NotAllowed",
                "display_name": "PSR2ControlStructuresElseIfDeclarationNotAllowed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there are no else if statements (elseif should be used instead).",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there are no else if statements (elseif should be used instead).",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.BodyOnNextLine",
                "display_name": "PSR2ControlStructuresSwitchDeclarationBodyOnNextLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.BreakIndent",
                "display_name": "PSR2ControlStructuresSwitchDeclarationBreakIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.BreakNotNewLine",
                "display_name": "PSR2ControlStructuresSwitchDeclarationBreakNotNewLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.SpaceBeforeColon",
                "display_name": "PSR2ControlStructuresSwitchDeclarationSpaceBeforeColon",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.SpacingAfterCase",
                "display_name": "PSR2ControlStructuresSwitchDeclarationSpacingAfterCase",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.TerminatingComment",
                "display_name": "PSR2ControlStructuresSwitchDeclarationTerminatingComment",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.ControlStructures.SwitchDeclaration.WrongOpener",
                "display_name": "PSR2ControlStructuresSwitchDeclarationWrongOpener",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all switch statements are defined correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all switch statements are defined correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Files.ClosingTag.NotAllowed",
                "display_name": "PSR2FilesClosingTagNotAllowed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the file does not end with a closing tag.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the file does not end with a closing tag.",
                "disable": false
            },
            {
                "real_name": "PSR2.Files.EndFileNewline.NoneFound",
                "display_name": "PSR2FilesEndFileNewlineNoneFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures the file ends with a newline character.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures the file ends with a newline character.",
                "disable": false
            },
            {
                "real_name": "PSR2.Files.EndFileNewline.TooMany",
                "display_name": "PSR2FilesEndFileNewlineTooMany",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures the file ends with a newline character.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures the file ends with a newline character.",
                "disable": false
            },
            {
                "real_name": "PSR2.Methods.FunctionClosingBrace.SpacingBeforeClose",
                "display_name": "PSR2MethodsFunctionClosingBraceSpacingBeforeClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the closing brace of a function goes directly after the body.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the closing brace of a function goes directly after the body.",
                "disable": false
            },
            {
                "real_name": "PSR2.Methods.MethodDeclaration.AbstractAfterVisibility",
                "display_name": "PSR2MethodsMethodDeclarationAbstractAfterVisibility",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the method declaration is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the method declaration is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Methods.MethodDeclaration.FinalAfterVisibility",
                "display_name": "PSR2MethodsMethodDeclarationFinalAfterVisibility",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the method declaration is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the method declaration is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Methods.MethodDeclaration.StaticBeforeVisibility",
                "display_name": "PSR2MethodsMethodDeclarationStaticBeforeVisibility",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the method declaration is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the method declaration is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Methods.MethodDeclaration.Underscore",
                "display_name": "PSR2MethodsMethodDeclarationUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the method declaration is correct.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the method declaration is correct.",
                "disable": false
            },
            {
                "real_name": "PSR2.Namespaces.NamespaceDeclaration.BlankLineAfter",
                "display_name": "PSR2NamespacesNamespaceDeclarationBlankLineAfter",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures namespaces are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures namespaces are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Namespaces.UseDeclaration.MultipleDeclarations",
                "display_name": "PSR2NamespacesUseDeclarationMultipleDeclarations",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures USE blocks are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures USE blocks are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Namespaces.UseDeclaration.SpaceAfterLastUse",
                "display_name": "PSR2NamespacesUseDeclarationSpaceAfterLastUse",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures USE blocks are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures USE blocks are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Namespaces.UseDeclaration.SpaceAfterUse",
                "display_name": "PSR2NamespacesUseDeclarationSpaceAfterUse",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures USE blocks are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures USE blocks are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Namespaces.UseDeclaration.UseAfterNamespace",
                "display_name": "PSR2NamespacesUseDeclarationUseAfterNamespace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures USE blocks are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures USE blocks are declared correctly.",
                "disable": false
            },
            {
                "real_name": "PSR2.Namespaces.UseDeclaration.UseBeforeNamespace",
                "display_name": "PSR2NamespacesUseDeclarationUseBeforeNamespace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures USE blocks are declared correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures USE blocks are declared correctly.",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Asserts.ErrFunctionHandling",
                "display_name": "SecurityBadFunctionsAssertsErrFunctionHandling",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions Asserts ErrFunctionHandling",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Asserts ErrFunctionHandling",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Asserts.WarnFunctionHandling",
                "display_name": "SecurityBadFunctionsAssertsWarnFunctionHandling",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions Asserts WarnFunctionHandling",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Asserts WarnFunctionHandling",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Backticks.ErrSystemExec",
                "display_name": "SecurityBadFunctionsBackticksErrSystemExec",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions Backticks ErrSystemExec",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Backticks ErrSystemExec",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Backticks.WarnSystemExec",
                "display_name": "SecurityBadFunctionsBackticksWarnSystemExec",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions Backticks WarnSystemExec",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Backticks WarnSystemExec",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.CallbackFunctions.ErrCallbackFunctions",
                "display_name": "SecurityBadFunctionsCallbackFunctionsErrCallbackFunctions",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions CallbackFunctions ErrCallbackFunctions",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions CallbackFunctions ErrCallbackFunctions",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.CallbackFunctions.WarnCallbackFunctions",
                "display_name": "SecurityBadFunctionsCallbackFunctionsWarnCallbackFunctions",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions CallbackFunctions WarnCallbackFunctions",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions CallbackFunctions WarnCallbackFunctions",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.CryptoFunctions.ErrPCKS1Crypto",
                "display_name": "SecurityBadFunctionsCryptoFunctionsErrPCKS1Crypto",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions CryptoFunctions ErrPCKS1Crypto",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions CryptoFunctions ErrPCKS1Crypto",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.CryptoFunctions.WarnCryptoFunc",
                "display_name": "SecurityBadFunctionsCryptoFunctionsWarnCryptoFunc",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions CryptoFunctions WarnCryptoFunc",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions CryptoFunctions WarnCryptoFunc",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.CryptoFunctions.WarnPCKS1Crypto",
                "display_name": "SecurityBadFunctionsCryptoFunctionsWarnPCKS1Crypto",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions CryptoFunctions WarnPCKS1Crypto",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions CryptoFunctions WarnPCKS1Crypto",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.EasyRFI.ErrEasyRFI",
                "display_name": "SecurityBadFunctionsEasyRFIErrEasyRFI",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions EasyRFI ErrEasyRFI",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions EasyRFI ErrEasyRFI",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.EasyRFI.WarnEasyRFI",
                "display_name": "SecurityBadFunctionsEasyRFIWarnEasyRFI",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions EasyRFI WarnEasyRFI",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions EasyRFI WarnEasyRFI",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.EasyXSS.EasyXSSerr",
                "display_name": "SecurityBadFunctionsEasyXSSEasyXSSerr",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions EasyXSS EasyXSSerr",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions EasyXSS EasyXSSerr",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.EasyXSS.EasyXSSwarn",
                "display_name": "SecurityBadFunctionsEasyXSSEasyXSSwarn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions EasyXSS EasyXSSwarn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions EasyXSS EasyXSSwarn",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.ErrorHandling.ErrorReporting0",
                "display_name": "SecurityBadFunctionsErrorHandlingErrorReporting0",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions ErrorHandling ErrorReporting0",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions ErrorHandling ErrorReporting0",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FilesystemFunctions.ErrFilesystem",
                "display_name": "SecurityBadFunctionsFilesystemFunctionsErrFilesystem",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions FilesystemFunctions ErrFilesystem",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FilesystemFunctions ErrFilesystem",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FilesystemFunctions.WarnFilesystem",
                "display_name": "SecurityBadFunctionsFilesystemFunctionsWarnFilesystem",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions FilesystemFunctions WarnFilesystem",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FilesystemFunctions WarnFilesystem",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FilesystemFunctions.WarnSymlink",
                "display_name": "SecurityBadFunctionsFilesystemFunctionsWarnSymlink",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions FilesystemFunctions WarnSymlink",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FilesystemFunctions WarnSymlink",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FilesystemFunctions.WarnWeirdFilesystem",
                "display_name": "SecurityBadFunctionsFilesystemFunctionsWarnWeirdFilesystem",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions FilesystemFunctions WarnWeirdFilesystem",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FilesystemFunctions WarnWeirdFilesystem",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FringeFunctions.ErrFringestuff",
                "display_name": "SecurityBadFunctionsFringeFunctionsErrFringestuff",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions FringeFunctions ErrFringestuff",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FringeFunctions ErrFringestuff",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FringeFunctions.WarnFringestuff",
                "display_name": "SecurityBadFunctionsFringeFunctionsWarnFringestuff",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions FringeFunctions WarnFringestuff",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FringeFunctions WarnFringestuff",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FunctionHandlingFunctions.ErrFunctionHandling",
                "display_name": "SecurityBadFunctionsFunctionHandlingFunctionsErrFunctionHandling",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions FunctionHandlingFunctions ErrFunctionHandling",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FunctionHandlingFunctions ErrFunctionHandling",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.FunctionHandlingFunctions.WarnFunctionHandling",
                "display_name": "SecurityBadFunctionsFunctionHandlingFunctionsWarnFunctionHand",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions FunctionHandlingFunctions WarnFunctionHandling",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions FunctionHandlingFunctions WarnFunctionHandling",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Mysqli.ErrMysqli",
                "display_name": "SecurityBadFunctionsMysqliErrMysqli",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions Mysqli ErrMysqli",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Mysqli ErrMysqli",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Mysqli.ErrMysqliconnect",
                "display_name": "SecurityBadFunctionsMysqliErrMysqliconnect",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions Mysqli ErrMysqliconnect",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Mysqli ErrMysqliconnect",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Mysqli.WarnMysqli",
                "display_name": "SecurityBadFunctionsMysqliWarnMysqli",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions Mysqli WarnMysqli",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Mysqli WarnMysqli",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.NoEvals.NoEvals",
                "display_name": "SecurityBadFunctionsNoEvalsNoEvals",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions NoEvals NoEvals",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions NoEvals NoEvals",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.Phpinfos.WarnPhpinfo",
                "display_name": "SecurityBadFunctionsPhpinfosWarnPhpinfo",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions Phpinfos WarnPhpinfo",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions Phpinfos WarnPhpinfo",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.PregReplace.PregReplaceDyn",
                "display_name": "SecurityBadFunctionsPregReplacePregReplaceDyn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions PregReplace PregReplaceDyn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions PregReplace PregReplaceDyn",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.PregReplace.PregReplaceE",
                "display_name": "SecurityBadFunctionsPregReplacePregReplaceE",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions PregReplace PregReplaceE",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions PregReplace PregReplaceE",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.PregReplace.PregReplaceUserInput",
                "display_name": "SecurityBadFunctionsPregReplacePregReplaceUserInput",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions PregReplace PregReplaceUserInput",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions PregReplace PregReplaceUserInput",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.PregReplace.PregReplaceUserInputE",
                "display_name": "SecurityBadFunctionsPregReplacePregReplaceUserInputE",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions PregReplace PregReplaceUserInputE",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions PregReplace PregReplaceUserInputE",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.PregReplace.PregReplaceWeird",
                "display_name": "SecurityBadFunctionsPregReplacePregReplaceWeird",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions PregReplace PregReplaceWeird",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions PregReplace PregReplaceWeird",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.SQLFunctions.ErrSQLFunction",
                "display_name": "SecurityBadFunctionsSQLFunctionsErrSQLFunction",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions SQLFunctions ErrSQLFunction",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions SQLFunctions ErrSQLFunction",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.SQLFunctions.WarnSQLFunction",
                "display_name": "SecurityBadFunctionsSQLFunctionsWarnSQLFunction",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions SQLFunctions WarnSQLFunction",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions SQLFunctions WarnSQLFunction",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.SystemExecFunctions.ErrSystemExec",
                "display_name": "SecurityBadFunctionsSystemExecFunctionsErrSystemExec",
                "severity": "error",
                "category": "security",
                "rule_title": "Security BadFunctions SystemExecFunctions ErrSystemExec",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions SystemExecFunctions ErrSystemExec",
                "disable": false
            },
            {
                "real_name": "Security.BadFunctions.SystemExecFunctions.WarnSystemExec",
                "display_name": "SecurityBadFunctionsSystemExecFunctionsWarnSystemExec",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security BadFunctions SystemExecFunctions WarnSystemExec",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security BadFunctions SystemExecFunctions WarnSystemExec",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7ErrAdvisoriesContribAbandonned",
                "display_name": "SecurityDrupal7AdvisoriesContribD7ErrAdvisoriesContribAbandonned",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribAbandonned",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribAbandonned",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7ErrAdvisoriesContribFoundMajor",
                "display_name": "SecurityDrupal7AdvisoriesContribD7ErrAdvisoriesContribFoundMajor",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribFoundMajor",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribFoundMajor",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7ErrAdvisoriesContribFoundMinor",
                "display_name": "SecurityDrupal7AdvisoriesContribD7ErrAdvisoriesContribFoundMinor",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribFoundMinor",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribFoundMinor",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7ErrAdvisoriesContribUnsupported",
                "display_name": "SecurityDrupal7AdvisoriesContribD7ErrAdvisoriesContribUnsupport",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribUnsupported",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7ErrAdvisoriesContribUnsupported",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7WarnAdvisoriesContribDev",
                "display_name": "SecurityDrupal7AdvisoriesContribD7WarnAdvisoriesContribDev",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribDev",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribDev",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7WarnAdvisoriesContribFoundMajor",
                "display_name": "SecurityDrupal7AdvisoriesContribD7WarnAdvisoriesContribFound",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribFoundMajor",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribFoundMajor",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7WarnAdvisoriesContribNoInfo",
                "display_name": "SecurityDrupal7AdvisoriesContribD7WarnAdvisoriesContribNoInfo",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribNoInfo",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribNoInfo",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesContrib.D7WarnAdvisoriesContribrc",
                "display_name": "SecurityDrupal7AdvisoriesContribD7WarnAdvisoriesContribrc",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribrc",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesContrib D7WarnAdvisoriesContribrc",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AdvisoriesCore.D7AdvCore",
                "display_name": "SecurityDrupal7AdvisoriesCoreD7AdvCore",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AdvisoriesCore D7AdvCore",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AdvisoriesCore D7AdvCore",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AESModule.D7DbQueryDirectVar",
                "display_name": "SecurityDrupal7AESModuleD7DbQueryDirectVar",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AESModule D7DbQueryDirectVar",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AESModule D7DbQueryDirectVar",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AESModule.D7DbQuerySQLi",
                "display_name": "SecurityDrupal7AESModuleD7DbQuerySQLi",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 AESModule D7DbQuerySQLi",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AESModule D7DbQuerySQLi",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.AESModule.D7NoDbQuery",
                "display_name": "SecurityDrupal7AESModuleD7NoDbQuery",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 AESModule D7NoDbQuery",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 AESModule D7NoDbQuery",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.Cachei.D7CacheDirectVar",
                "display_name": "SecurityDrupal7CacheiD7CacheDirectVar",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 Cachei D7CacheDirectVar",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 Cachei D7CacheDirectVar",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.Cachei.D7Cachei",
                "display_name": "SecurityDrupal7CacheiD7Cachei",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 Cachei D7Cachei",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 Cachei D7Cachei",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.DbQueryAC.D7DbQueryACErr",
                "display_name": "SecurityDrupal7DbQueryACD7DbQueryACErr",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 DbQueryAC D7DbQueryACErr",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 DbQueryAC D7DbQueryACErr",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.DbQueryAC.D7DbQueryACWar",
                "display_name": "SecurityDrupal7DbQueryACD7DbQueryACWar",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 DbQueryAC D7DbQueryACWar",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 DbQueryAC D7DbQueryACWar",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.DynQueries.D7DynQueriesDirectVar",
                "display_name": "SecurityDrupal7DynQueriesD7DynQueriesDirectVar",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 DynQueries D7DynQueriesDirectVar",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 DynQueries D7DynQueriesDirectVar",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.DynQueries.D7DynQueriesSQLi",
                "display_name": "SecurityDrupal7DynQueriesD7DynQueriesSQLi",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 DynQueries D7DynQueriesSQLi",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 DynQueries D7DynQueriesSQLi",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.DynQueries.D7DynQueriesWarn",
                "display_name": "SecurityDrupal7DynQueriesD7DynQueriesWarn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 DynQueries D7DynQueriesWarn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 DynQueries D7DynQueriesWarn",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.HttpRequest.D7HttpRequestSSL",
                "display_name": "SecurityDrupal7HttpRequestD7HttpRequestSSL",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 HttpRequest D7HttpRequestSSL",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 HttpRequest D7HttpRequestSSL",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.HttpRequest.D7HttpRequestUserInputErr",
                "display_name": "SecurityDrupal7HttpRequestD7HttpRequestUserInputErr",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 HttpRequest D7HttpRequestUserInputErr",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 HttpRequest D7HttpRequestUserInputErr",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.SQLi.D7DbQueryDirectVar",
                "display_name": "SecurityDrupal7SQLiD7DbQueryDirectVar",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 SQLi D7DbQueryDirectVar",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 SQLi D7DbQueryDirectVar",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.SQLi.D7DbQuerySQLi",
                "display_name": "SecurityDrupal7SQLiD7DbQuerySQLi",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 SQLi D7DbQuerySQLi",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 SQLi D7DbQuerySQLi",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.SQLi.D7NoDbQuery",
                "display_name": "SecurityDrupal7SQLiD7NoDbQuery",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 SQLi D7NoDbQuery",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 SQLi D7NoDbQuery",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.UserInputWatch.D7UserInWaFormStateWarn",
                "display_name": "SecurityDrupal7UserInputWatchD7UserInWaFormStateWarn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 UserInputWatch D7UserInWaFormStateWarn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 UserInputWatch D7UserInWaFormStateWarn",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.UserInputWatch.D7UserInWaFormWarn",
                "display_name": "SecurityDrupal7UserInputWatchD7UserInWaFormWarn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 UserInputWatch D7UserInWaFormWarn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 UserInputWatch D7UserInWaFormWarn",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.UserInputWatch.D7UserInWaWarn",
                "display_name": "SecurityDrupal7UserInputWatchD7UserInWaWarn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 UserInputWatch D7UserInWaWarn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 UserInputWatch D7UserInWaWarn",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSFormValue.D7XSSErrFormValue",
                "display_name": "SecurityDrupal7XSSFormValueD7XSSErrFormValue",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 XSSFormValue D7XSSErrFormValue",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSFormValue D7XSSErrFormValue",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSFormValue.D7XSSWarFormValue",
                "display_name": "SecurityDrupal7XSSFormValueD7XSSWarFormValue",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 XSSFormValue D7XSSWarFormValue",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSFormValue D7XSSWarFormValue",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSHTMLConstruct.D7XSSHTMLConstructErr",
                "display_name": "SecurityDrupal7XSSHTMLConstructD7XSSHTMLConstructErr",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Drupal7 XSSHTMLConstruct D7XSSHTMLConstructErr",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSHTMLConstruct D7XSSHTMLConstructErr",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSHTMLConstruct.D7XSSHTMLConstructWarn",
                "display_name": "SecurityDrupal7XSSHTMLConstructD7XSSHTMLConstructWarn",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 XSSHTMLConstruct D7XSSHTMLConstructWarn",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSHTMLConstruct D7XSSHTMLConstructWarn",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSHTMLConstruct.D7XSSHTMLConstructWarnF",
                "display_name": "SecurityDrupal7XSSHTMLConstructD7XSSHTMLConstructWarnF",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 XSSHTMLConstruct D7XSSHTMLConstructWarnF",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSHTMLConstruct D7XSSHTMLConstructWarnF",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSPTheme.D7XSSWarhtmltag",
                "display_name": "SecurityDrupal7XSSPThemeD7XSSWarhtmltag",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 XSSPTheme D7XSSWarhtmltag",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSPTheme D7XSSWarhtmltag",
                "disable": false
            },
            {
                "real_name": "Security.Drupal7.XSSPTheme.D7XSSWarTheme",
                "display_name": "SecurityDrupal7XSSPThemeD7XSSWarTheme",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Drupal7 XSSPTheme D7XSSWarTheme",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Drupal7 XSSPTheme D7XSSWarTheme",
                "disable": false
            },
            {
                "real_name": "Security.Misc.BadCorsHeader.WarnPCKS1Crypto",
                "display_name": "SecurityMiscBadCorsHeaderWarnPCKS1Crypto",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Misc BadCorsHeader WarnPCKS1Crypto",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Misc BadCorsHeader WarnPCKS1Crypto",
                "disable": false
            },
            {
                "real_name": "Security.Misc.IncludeMismatch.ErrMiscIncludeMismatch",
                "display_name": "SecurityMiscIncludeMismatchErrMiscIncludeMismatch",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Misc IncludeMismatch ErrMiscIncludeMismatch",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Misc IncludeMismatch ErrMiscIncludeMismatch",
                "disable": false
            },
            {
                "real_name": "Security.Misc.IncludeMismatch.ErrMiscIncludeMismatchNoExt",
                "display_name": "SecurityMiscIncludeMismatchErrMiscIncludeMismatchNoExt",
                "severity": "error",
                "category": "security",
                "rule_title": "Security Misc IncludeMismatch ErrMiscIncludeMismatchNoExt",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Misc IncludeMismatch ErrMiscIncludeMismatchNoExt",
                "disable": false
            },
            {
                "real_name": "Security.Misc.TypeJuggle.TypeJuggle",
                "display_name": "SecurityMiscTypeJuggleTypeJuggle",
                "severity": "warning",
                "category": "security",
                "rule_title": "Security Misc TypeJuggle TypeJuggle",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Security Misc TypeJuggle TypeJuggle",
                "disable": false
            },
            {
                "real_name": "Squiz.Classes.ValidClassName.MissingBrace",
                "display_name": "SquizClassesValidClassNameMissingBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures classes are in camel caps, and the first letter is capitalised.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures classes are in camel caps, and the first letter is capitalised.",
                "disable": false
            },
            {
                "real_name": "Squiz.Classes.ValidClassName.NotCamelCaps",
                "display_name": "SquizClassesValidClassNameNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures classes are in camel caps, and the first letter is capitalised.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures classes are in camel caps, and the first letter is capitalised.",
                "disable": false
            },
            {
                "real_name": "Squiz.Commenting.DocCommentAlignment.NoSpaceAfterStar",
                "display_name": "SquizCommentingDocCommentAlignmentNoSpaceAfterStar",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Tests that the stars in a doc comment align correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Tests that the stars in a doc comment align correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Commenting.DocCommentAlignment.SpaceAfterStar",
                "display_name": "SquizCommentingDocCommentAlignmentSpaceAfterStar",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Tests that the stars in a doc comment align correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Tests that the stars in a doc comment align correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Commenting.DocCommentAlignment.SpaceBeforeStar",
                "display_name": "SquizCommentingDocCommentAlignmentSpaceBeforeStar",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Tests that the stars in a doc comment align correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Tests that the stars in a doc comment align correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ControlSignature.NewlineAfterOpenBrace",
                "display_name": "SquizControlStructuresControlSignatureNewlineAfterOpenBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that control statements conform to their coding standards.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that control statements conform to their coding standards.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace",
                "display_name": "SquizControlStructuresControlSignatureSpaceAfterCloseBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that control statements conform to their coding standards.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that control statements conform to their coding standards.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis",
                "display_name": "SquizControlStructuresControlSignatureSpaceAfterCloseParenthesis",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that control statements conform to their coding standards.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that control statements conform to their coding standards.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ControlSignature.SpaceAfterKeyword",
                "display_name": "SquizControlStructuresControlSignatureSpaceAfterKeyword",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that control statements conform to their coding standards.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that control statements conform to their coding standards.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ControlSignature.SpaceBeforeSemicolon",
                "display_name": "SquizControlStructuresControlSignatureSpaceBeforeSemicolon",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that control statements conform to their coding standards.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that control statements conform to their coding standards.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower",
                "display_name": "SquizControlStructuresForEachLoopDeclarationAsNotLower",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.MissingAs",
                "display_name": "SquizControlStructuresForEachLoopDeclarationMissingAs",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.MissingCloseParenthesis",
                "display_name": "SquizForEachLoopDeclarationMissingCloseParenthesis",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.MissingOpenParenthesis",
                "display_name": "SquizForEachLoopDeclarationMissingOpenParenthesis",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow",
                "display_name": "SquizControlStructuresForEachLoopDeclarationNoSpaceAfterArrow",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs",
                "display_name": "SquizControlStructuresForEachLoopDeclarationNoSpaceAfterAs",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow",
                "display_name": "SquizControlStructuresForEachLoopDeclarationNoSpaceBeforeArrow",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs",
                "display_name": "SquizControlStructuresForEachLoopDeclarationNoSpaceBeforeAs",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpaceAfterOpen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpaceBeforeClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpacingAfterArrow",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpacingAfterAs",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterOpen",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpacingAfterOpen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpacingBeforeArrow",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs",
                "display_name": "SquizControlStructuresForEachLoopDeclarationSpacingBeforeAs",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of foreach loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of foreach loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket",
                "display_name": "SquizControlStructuresForLoopDeclarationNoOpenBracket",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of for loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of for loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen",
                "display_name": "SquizControlStructuresForLoopDeclarationSpacingAfterOpen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of for loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of for loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose",
                "display_name": "SquizControlStructuresForLoopDeclarationSpacingBeforeClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that there is a space between each condition of for loops.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that there is a space between each condition of for loops.",
                "disable": false
            },
            {
                "real_name": "Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase",
                "display_name": "SquizControlStructuresLowercaseDeclarationFoundUppercase",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all control structure keywords are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all control structure keywords are lowercase.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": "equalsSpacing=1",
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacingNoSpaceBeforeArg",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeHint",
                "display_name": "SquizFunctionDeclarationArgumentSpacingNoSpaceBeforeHint",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault",
                "display_name": "SquizFunctionDeclarationArgumentSpacingSpaceAfterDefault",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeComma",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacingSpaceBeforeComma",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals",
                "display_name": "SquizFunctionDeclarationArgumentSpacingSpaceBeforeEquals",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacingSpacingAfterHint",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacingSpacingAfterOpen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeArg",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacingSpacingBeforeArg",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose",
                "display_name": "SquizFunctionDeclarationArgumentSpacingSpacingBeforeClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeHint",
                "display_name": "SquizFunctionDeclarationArgumentSpacingSpacingBeforeHint",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween",
                "display_name": "SquizFunctionsFunctionDeclarationArgumentSpacingSpacingBetween",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that arguments in function declarations are spaced correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that arguments in function declarations are spaced correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.GlobalFunction.Found",
                "display_name": "SquizFunctionsGlobalFunctionFound",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Tests for functions outside of classes.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Tests for functions outside of classes.",
                "disable": false
            },
            {
                "real_name": "Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase",
                "display_name": "SquizFunctionsLowercaseFunctionKeywordsFoundUppercase",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensures all function keywords are lowercase.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensures all function keywords are lowercase.",
                "disable": false
            },
            {
                "real_name": "Squiz.Scope.MethodScope.Missing",
                "display_name": "SquizScopeMethodScopeMissing",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Verifies that class methods have scope modifiers.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Verifies that class methods have scope modifiers.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose",
                "display_name": "SquizWhiteSpaceControlStructureSpacingLineAfterClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose",
                "display_name": "SquizWhiteSpaceControlStructureSpacingNoLineAfterClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace",
                "display_name": "SquizWhiteSpaceControlStructureSpacingSpaceBeforeCloseBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen",
                "display_name": "SquizWhiteSpaceControlStructureSpacingSpacingAfterOpen",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace",
                "display_name": "SquizWhiteSpaceControlStructureSpacingSpacingAfterOpenBrace",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose",
                "display_name": "SquizWhiteSpaceControlStructureSpacingSpacingBeforeClose",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that control structures have the correct spacing around brackets.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that control structures have the correct spacing around brackets.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore",
                "display_name": "SquizWhiteSpaceScopeClosingBraceContentBefore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the closing braces of scopes are aligned correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the closing braces of scopes are aligned correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ScopeClosingBrace.Indent",
                "display_name": "SquizWhiteSpaceScopeClosingBraceIndent",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the closing braces of scopes are aligned correctly.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the closing braces of scopes are aligned correctly.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect",
                "display_name": "SquizWhiteSpaceScopeKeywordSpacingIncorrect",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Ensure there is a single space after scope keywords.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Ensure there is a single space after scope keywords.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines",
                "display_name": "SquizWhiteSpaceSuperfluousWhitespaceEmptyLines",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks for unneeded whitespace.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks for unneeded whitespace.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.SuperfluousWhitespace.EndFile",
                "display_name": "SquizWhiteSpaceSuperfluousWhitespaceEndFile",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks for unneeded whitespace.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks for unneeded whitespace.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.SuperfluousWhitespace.EndLine",
                "display_name": "SquizWhiteSpaceSuperfluousWhitespaceEndLine",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks for unneeded whitespace.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks for unneeded whitespace.",
                "disable": false
            },
            {
                "real_name": "Squiz.WhiteSpace.SuperfluousWhitespace.StartFile",
                "display_name": "SquizWhiteSpaceSuperfluousWhitespaceStartFile",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks for unneeded whitespace.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks for unneeded whitespace.",
                "disable": false
            },
            {
                "real_name": "Zend.Files.ClosingTag.NotAllowed",
                "display_name": "ZendFilesClosingTagNotAllowed",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks that the file does not end with a closing tag.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks that the file does not end with a closing tag.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.ContainsNumbers",
                "display_name": "ZendNamingConventionsValidVariableNameContainsNumbers",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.MemberVarContainsNumbers",
                "display_name": "ZendNamingConventionsValidVariableNameMemberVarContainsNumbers",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps",
                "display_name": "ZendNamingConventionsValidVariableNameMemberVarNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.NotCamelCaps",
                "display_name": "ZendNamingConventionsValidVariableNameNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore",
                "display_name": "ZendNamingConventionsValidVariableNamePrivateNoUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.PublicHasUnderscore",
                "display_name": "ZendNamingConventionsValidVariableNamePublicHasUnderscore",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.StringVarContainsNumbers",
                "display_name": "ZendNamingConventionsValidVariableNameStringVarContainsNumbers",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            },
            {
                "real_name": "Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps",
                "display_name": "ZendNamingConventionsValidVariableNameStringVarNotCamelCaps",
                "severity": "warning",
                "category": "convention",
                "rule_title": "Checks the naming of variables and member variables.",
                "rule_params": null,
                "custom": true,
                "languages": [
                    "php"
                ],
                "solution": null,
                "owner": null,
                "labels": [],
                "description": "Checks the naming of variables and member variables.",
                "disable": false
            }
        ],
        "open_user": true,
        "open_saas": false
    }
]