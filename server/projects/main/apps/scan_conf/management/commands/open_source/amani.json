[
    {
        "name": "amani",
        "display_name": "TCA-Armory-A",
        "description": "多语言静态代码分析引擎",
        "license": "自研",
        "libscheme_set": [],
        "task_processes": [
            "analyze",
            "datahandle"
        ],
        "scan_app": "codelint",
        "scm_url": null,
        "run_cmd": null,
        "envs": null,
        "build_flag": false,
        "checkrule_set": [
            {
                "real_name": "FuncDetect",
                "display_name": "FuncDetect",
                "severity": "info",
                "category": "convention",
                "rule_title": "Detect functions in code.",
                "rule_params": null,
                "custom": false,
                "languages": [
                    "cs",
                    "Go",
                    "js",
                    "kotlin",
                    "rust"
                ],
                "solution": "无",
                "owner": "yalechen",
                "labels": [],
                "description": "Detect functions in code.",
                "disable": false
            },
            {
                "real_name": "TestCaseValid",
                "display_name": "TestCaseValid",
                "severity": "warning",
                "category": "correctness",
                "rule_title": "校验测试用例是否有效。",
                "rule_params": null,
                "custom": false,
                "languages": [
                    "Go"
                ],
                "solution": "无",
                "owner": "yalechen",
                "labels": [],
                "description": "背景：开发同学编写的单元测试没有做断言，属于无效用例，永远都是成功。\n目标：代码分析判断一个测试函数是否有断言。\n支持：\n- testing\n- [testify](https://github.com/stretchr/testify)\n\n示例：\n```go\n// Bad case\nfunc Test_Demo1(t *testing.T) {\n}\n\n// Good case\nfunc Test_Demo2(t *testing.T) {\n\tassert.NoError(t, err)\n\tassert.Equal(t, 2, r)\n}\n```",
                "disable": false
            }
        ],
        "open_user": true,
        "open_saas": false
    }
]