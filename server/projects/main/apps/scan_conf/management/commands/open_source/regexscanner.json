[
    {
        "name": "regexscanner",
        "display_name": "TCA-Armory-R",
        "description": "正则匹配工具，支持go正则表达式(https://pkg.go.dev/regexp/syntax)\n支持自定义添加新规则：新建规则 - 填写正则表达式等规则参数 - 创建成功，即可在项目分析方案中选择规则来扫描。详见: https://tencent.github.io/CodeAnalysis/zh/guide/代码检查/工具/TCA-Armory-R.html ",
        "license": "自研",
        "libscheme_set": [],
        "task_processes": [
            "analyze",
            "datahandle"
        ],
        "scan_app": "codelint",
        "scm_url": null,
        "run_cmd": null,
        "envs": null,
        "build_flag": false,
        "checkrule_set": [
            {
                "real_name": "AllFileLicenseCheck",
                "display_name": "AllFileLicenseCheck",
                "severity": "info",
                "category": "other",
                "rule_title": "AllFileLicenseCheck",
                "rule_params": "regex =(Apache|MIT|New and Simplified BSD|GNU Library or \"Lesser\" General Public|Mozilla Public|Eclipse Public|Common Public|Common Development and Distribution|Python Software Foundation) *(?i)License *\nmsg = 发现协议\"%s\" \nignore_comment = False",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "Apache License, 2.0：需要使用开源的代码位置保留协议，贡献者预留等信息 除公司核心产品外，由于协议的限制较少，在风险评估后可以考虑使用\nBSD licenses BSD ：作者只想保留版权,而无其他特殊限制，除公司核心产品外，由于协议的限制较少，在风险评估后可以考虑使用\nGNU Library or “Lesser” General Public License LGPL：仅可通过类库进行引用 可在进行严格的风险评估后，考虑使用代码\nMIT license MIT：作者只想保留版权,而无其他特殊限制，除公司核心产品外，由于协议的限制较少，在风险评估后可以考虑使用\nMozilla Public License 1.1 MPL：修改后的代码版权归软件的发起者，可在进行严格的风险评估后，考虑使用代码，核心代码切记不要使用该协议开源代码\nEclipse Public License/Common Public License 1.0 EPL：商业方面，作者只想保留版权,而无其他特殊限制 除公司核心产品外，由于协议的限制较少，在风险评估后可以考虑使用\nCommon Development and Distribution License CDDL ：MPL（Mozilla Public License）的扩展协议，可在进行严格的风险评估后，考虑使用代码，核心代码切记不要使用该协议开源代码\nPython Software Foundation PSF ：类似apache需要保留原license内容，python协会定制的协议 可直接使用其作为底层工具应用，但不可直接对该开源代码进行二次开发并开源",
                "disable": false
            },
            {
                "real_name": "detect-antd-import",
                "display_name": "DetectAntdImport",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测import Antd引入",
                "rule_params": "regex=(import [\\\"\\']antd.*)|(import [\\\"\\']ant-design.*)|(import Antd.*)\nmsg=发现antd引入:%s.\nignore_comment=True\ninclude=*.js;*.mjs;*.jsx;*.vue;*.ts;*.tsx",
                "custom": false,
                "languages": [
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测import Antd引入",
                "disable": false
            },
            {
                "real_name": "detect-react-file",
                "display_name": "DetectReactFile",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测react核心库文件",
                "rule_params": "regex=(react.js)|(react-dom.js)|(react.min.js)|(react-dom.min.js)\nmsg=发现react库文件:%s.\nfile_scan=True\ninclude=*.js",
                "custom": false,
                "languages": [
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测react核心库文件",
                "disable": false
            },
            {
                "real_name": "detect-react-import",
                "display_name": "DetectReactImport",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测import react引入",
                "rule_params": "regex=(import \\(?React\\)?.*)|(import [\\\"\\']react.*)\nmsg=发现react引入:%s.\nignore_comment=True\ninclude=*.js;*.mjs;*.jsx;*.ts;*.tsx",
                "custom": false,
                "languages": [
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测import react引入",
                "disable": false
            },
            {
                "real_name": "detect-react-script",
                "display_name": "DetectReactScript",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测html中react引入",
                "rule_params": "regex=(<script/s+src.*react.*></script>)|(<script/s+src.*react-dom.*></script>)\nmsg=发现react引入:%s.\nignore_comment=True\ninclude=*.html;*.htm",
                "custom": false,
                "languages": [
                    "html"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测html中react引入",
                "disable": false
            },
            {
                "real_name": "detect-tdesign-import",
                "display_name": "DetectTdesignImport",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测import Tdesign引入",
                "rule_params": "regex=(import [\\\"\\']tdesign.*)|(import TDesign.*)\nmsg=发现tdesign引入:%s.\nignore_comment=True\ninclude=*.js;*.mjs;*.jsx;*.vue;*.ts;*.tsx",
                "custom": false,
                "languages": [
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测import Tdesign引入",
                "disable": false
            },
            {
                "real_name": "detect-vue-file",
                "display_name": "DetectVueFile",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测vue核心库文件",
                "rule_params": "regex=(vue.js)|(vue.min.js)\nmsg=发现vue库文件:%s.\nfile_scan=true\ninclude=*.js",
                "custom": false,
                "languages": [
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测vue核心库文件",
                "disable": false
            },
            {
                "real_name": "detect-vue-import",
                "display_name": "DetectVueImport",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测import Vue引入",
                "rule_params": "regex=(import Vue.*)|(import [\\\"\\']vue.*)\nmsg=发现vue引入:%s.\nignore_comment=True\ninclude=*.vue;*.html;*.htm;*.js;*.mjs;*.jsx;*.ts;*.tsx",
                "custom": false,
                "languages": [
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测import Vue引入",
                "disable": false
            },
            {
                "real_name": "detect-vue-script",
                "display_name": "DetectVueScript",
                "severity": "info",
                "category": "usability",
                "rule_title": "检测html中vue的引入",
                "rule_params": "regex=<script/s+src.*vue.*></script>\nmsg=发现vue引入:%s.\nignore_comment=True\ninclude=*.html;*.htm",
                "custom": false,
                "languages": [
                    "html",
                    "js",
                    "ts"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测html中vue的引入",
                "disable": false
            },
            {
                "real_name": "detect-css-expression-method",
                "display_name": "DetectCssExpressionMethod",
                "severity": "warning",
                "category": "security",
                "rule_title": "Detected high-risk method:expression() in css files",
                "rule_params": "regex=\\b(expression)\\s*\\(\nmsg=Detected high-risk method:expression().\nignore_comment=True\ninclude=*.css",
                "custom": false,
                "languages": [
                    "css"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "Detected high-risk method:expression() in css files",
                "disable": false
            },
            {
                "real_name": "detect-css-url-method",
                "display_name": "DetectCssUrlMethod",
                "severity": "warning",
                "category": "security",
                "rule_title": "Detected high-risk method:url() in css files",
                "rule_params": "regex=\\b(url)\\s*\\(\nmsg=Detected high-risk method:url().\nignore_comment=True\ninclude=*.css",
                "custom": false,
                "languages": [
                    "css"
                ],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "Detected high-risk method:url() in css files",
                "disable": false
            },
            {
                "real_name": "DetectedGithubToken",
                "display_name": "DetectedGithubToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Github Token检测",
                "rule_params": "regex=((ghp|gho|ghu|ghs)_[0-9a-zA-Z]{36})\nmsg = 可能包含github的token信息“%s”，建议删除\nignore_comment = False",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "Github Token检测",
                "disable": false
            },
            {
                "real_name": "DetectedLog4jFile",
                "display_name": "DetectedLog4jFile",
                "severity": "fatal",
                "category": "security",
                "rule_title": "检测log4j漏洞版本jar包",
                "rule_params": "regex = (log4j-core-1\\..*\\.jar)|(log4j-core-2\\.1[0-6]\\..*\\.jar)|(log4j-core-2\\.\\d\\..*\\.jar)\nmsg = 发现Log4j高危组件%s\nfile_scan = True",
                "custom": false,
                "languages": [
                    "java"
                ],
                "solution": "建议升级至2.17.0及以上版本。",
                "owner": null,
                "labels": [],
                "description": "Apache Log4j存在潜在JNDI注入安全漏洞，可导致服务器被入侵。\n高危版本：Apache Log4j 1.x版本；2.x < 2.17.0-rc2\n安全版本：Apache Log4j 2.17.0及以上",
                "disable": false
            },
            {
                "real_name": "DetectedLogBackFile",
                "display_name": "DetectedLogBackFile",
                "severity": "error",
                "category": "security",
                "rule_title": "检测logback漏洞版本的jar包",
                "rule_params": "regex =(logback-core-0\\.[1-9]\\..*\\.jar)|(logback-core-1\\.[0-1]\\..*\\.jar)|(logback-core-1\\.2\\.[0-8].*\\.jar)|(logback-core-1\\.3\\.0-alpha[0-9]\\.jar)|(logback-core-1\\.3\\.0-alpha10\\.jar)\nmsg = 发现低版本的漏洞组件%s\nfile_scan = True",
                "custom": false,
                "languages": [
                    "java"
                ],
                "solution": "请升级到1.2.9及以上版本。",
                "owner": null,
                "labels": [],
                "description": "发现logback漏洞版本：\nlogback version < 1.2.9\nlogback version < 1.3.0-alpha11\n请升级到1.2.9及以上版本。\n漏洞详情可以看：https://logback.qos.ch/news.html\nCVE详情：https://cve.report/CVE-2021-42550",
                "disable": false
            },
            {
                "real_name": "DetectedUsernameAndPasswordInURL",
                "display_name": "DetectedUsernameAndPasswordInURL",
                "severity": "error",
                "category": "security",
                "rule_title": "检测url中的账号密码",
                "rule_params": "regex=([\\w+]{1,24})(://)([^$<]{1})([^\\s\";]{1,}):([^$<]{1})([^\\s\";]{1,})@[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,24}([^\\s]+)\nmsg = 发现包含账号密码的URL: %s\nignore_comment = False",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": null,
                "labels": [],
                "description": "检测url中的账号密码",
                "disable": false
            },
            {
                "real_name": "detected-amazon-mws-auth-token",
                "display_name": "DetectedAmazonMwsAuthToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Amazon Mws Auth Token",
                "rule_params": "regex=amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\n\nmsg=Amazon MWS Auth Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Amazon Mws Auth Token",
                "disable": false
            },
            {
                "real_name": "detected-artifactory-password",
                "display_name": "DetectedArtifactoryPassword",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Artifactory Password",
                "rule_params": "regex=\\bAP[\\dABCDEF][a-zA-Z0-9]{8,}\nregex_not=sha(128|256|512).*\nmsg=Artifactory token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Artifactory Password",
                "disable": false
            },
            {
                "real_name": "detected-artifactory-token",
                "display_name": "DetectedArtifactoryToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Artifactory Token",
                "rule_params": "regex=\\bAKC[a-zA-Z0-9]{10,}\nregex_not=sha(128|256|512).*\nmsg=Artifactory token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Artifactory Token",
                "disable": false
            },
            {
                "real_name": "detected-aws-access-key-id-value",
                "display_name": "DetectedAwsAccessKeyIdValue",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Aws Access Key Id Value",
                "rule_params": "regex=(A3T[A-Z0-9]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}\nregex_not=(?i)example|sample|test|fake\nmsg=AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Aws Access Key Id Value",
                "disable": false
            },
            {
                "real_name": "detected-aws-account-id",
                "display_name": "DetectedAwsAccountId",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Aws Account Id",
                "rule_params": "regex=(?:\"|')?(?:AWS|aws|Aws)?_?(ACCOUNT|account|Account)_?(?:ID|id|Id)?(?:\"|')?\\s{0,50}(?::|=>|=)\\s{0,50}(?:\"|')?([0-9]{12})(?:\"|')?\n\nmsg=AWS Account ID detected. This is a sensitive credential and should not be hardcoded here. Instead, read the value from an environment variable or keep the value in a separate, private file.\n\nmatch_group=2",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Aws Account Id",
                "disable": false
            },
            {
                "real_name": "detected-aws-appsync-graphql-key",
                "display_name": "DetectedAwsAppsyncGraphqlKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Aws Appsync Graphql Key",
                "rule_params": "regex=da2-[a-z0-9]{26}\n\nmsg=AWS AppSync GraphQL Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Aws Appsync Graphql Key",
                "disable": false
            },
            {
                "real_name": "detected-aws-secret-access-key",
                "display_name": "DetectedAwsSecretAccessKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Aws Secret Access Key",
                "rule_params": "regex=((\"|'|`)?((?i)aws)_?\\w*((?i)secret)_?\\w*(\"|'|`)?\\s{0,50}(:|=>|=)\\s{0,50}(\"|'|`)?[A-Za-z0-9/+=]{40}(\"|'|`)?)\nregex_not=(?i)example|sample|test|fake\nmsg=AWS Secret Access Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Aws Secret Access Key",
                "disable": false
            },
            {
                "real_name": "detected-aws-session-token",
                "display_name": "DetectedAwsSessionToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Aws Session Token",
                "rule_params": "regex=((\"|'|`)?((?i)aws)?_?((?i)session)_?((?i)token)(\"|'|`)?\\s{0,50}(:|=>|=)\\s{0,50}(\"|'|`)?[A-Za-z0-9/+=]{16,}(\"|'|`)?)\nregex_not=(?i)example|sample|test|fake\nmsg=AWS Session Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Aws Session Token",
                "disable": false
            },
            {
                "real_name": "detected-bcrypt-hash",
                "display_name": "DetectedBcryptHash",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Bcrypt Hash",
                "rule_params": "regex=\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}\n\nmsg=bcrypt hash detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Bcrypt Hash",
                "disable": false
            },
            {
                "real_name": "detected-codeclimate",
                "display_name": "DetectedCodeclimate",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Codeclimate",
                "rule_params": "regex=(?i)codeclima.{0,50}[\"|'|`]?[0-9a-f]{64}[\"|'|`]?\n\nmsg=CodeClimate detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Codeclimate",
                "disable": false
            },
            {
                "real_name": "detected-etc-shadow",
                "display_name": "DetectedEtcShadow",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Etc Shadow",
                "rule_params": "regex=root:[x!*]*:[0-9]*:[0-9]*\n\nmsg=linux shadow file detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Etc Shadow",
                "disable": false
            },
            {
                "real_name": "detected-facebook-access-token",
                "display_name": "DetectedFacebookAccessToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Facebook Access Token",
                "rule_params": "regex=EAACEdEose0cBA[0-9A-Za-z]+\nregex1=EAAAACZAVC6ygB[0-9A-Za-z]+\nregex2=EAAAAZAw4[0-9A-Za-z]+\n\nmsg=Facebook Access Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Facebook Access Token",
                "disable": false
            },
            {
                "real_name": "detected-facebook-oauth",
                "display_name": "DetectedFacebookOauth",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Facebook Oauth",
                "rule_params": "regex=([fF][aA][cC][eE][bB][oO][oO][kK]).*[tT][oO][kK][eE][nN].*['|\"]?[0-9a-f]{32}['|\"]?\n\nmsg=Facebook OAuth detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Facebook Oauth",
                "disable": false
            },
            {
                "real_name": "detected-generic-api-key",
                "display_name": "DetectedGenericApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Generic Api Key",
                "rule_params": "regex=([aA][pP][iI]_?[kK][eE][yY][=_:\\s-]+['|\"]?[0-9a-zA-Z]{32,45}['|\"]?)\n\nmsg=Generic API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Generic Api Key",
                "disable": false
            },
            {
                "real_name": "detected-generic-secret",
                "display_name": "DetectedGenericSecret",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Generic Secret",
                "rule_params": "regex=([sS][eE][cC][rR][eE][tT][:= \\t]*['|\\\"]?[0-9a-zA-Z]{32,45}['|\\\"]?)\n\nmsg=Generic Secret detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Generic Secret",
                "disable": false
            },
            {
                "real_name": "detected-github-token",
                "display_name": "DetectedGithubToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Github Token",
                "rule_params": "regex=(?:\"|')?\\s{0,50}(?::|=>|=)\\s{0,50}(?:\"|')?(gh[pousr]_[A-Za-z0-9_]{36,251})(?:\"|')?\nregex1=[hH][tT][tT][pP][sS]?://.*(gh[pousr]_[A-Za-z0-9_]{36,251}).*\n\nmsg=GitHub Token detected\n\nmatch_group=1\nentropy=3",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Github Token",
                "disable": false
            },
            {
                "real_name": "detected-google-api-key",
                "display_name": "DetectedGoogleApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Google Api Key",
                "rule_params": "regex=\\bAIzaSy[0-9A-Za-z-_]{33}\\b\nregex_not=\\bAIzaSy[0-9A-Za-z-_]{33}\\b[=]\nmsg=Google API Key Detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Google Api Key",
                "disable": false
            },
            {
                "real_name": "detected-google-cloud-api-key",
                "display_name": "DetectedGoogleCloudApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Google Cloud Api Key",
                "rule_params": "regex=AIza[0-9A-Za-z\\\\-_]{35}\n\nmsg=Google Cloud API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Google Cloud Api Key",
                "disable": false
            },
            {
                "real_name": "detected-google-gcm-service-account",
                "display_name": "DetectedGoogleGcmServiceAccount",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Google Gcm Service Account",
                "rule_params": "regex=((\"|'|`)?type(\"|'|`)?\\s{0,50}(:|=>|=)\\s{0,50}(\"|'|`)?service_account(\"|'|`)?,?)\n\nmsg=Google (GCM) Service account detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Google Gcm Service Account",
                "disable": false
            },
            {
                "real_name": "detected-google-oauth-access-token",
                "display_name": "DetectedGoogleOauthAccessToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Google Oauth Access Token",
                "rule_params": "regex=ya29\\.[0-9A-Za-z\\-_]+\n\nmsg=Google OAuth Access Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Google Oauth Access Token",
                "disable": false
            },
            {
                "real_name": "detected-google-oauth-url",
                "display_name": "DetectedGoogleOauthUrl",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Google Oauth Url",
                "rule_params": "regex=[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com\n\nmsg=Google OAuth url detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Google Oauth Url",
                "disable": false
            },
            {
                "real_name": "detected-heroku-api-key",
                "display_name": "DetectedHerokuApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Heroku Api Key",
                "rule_params": "regex=([hH][eE][rR][oO][kK][uU].*[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12})\n\nmsg=Heroku API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Heroku Api Key",
                "disable": false
            },
            {
                "real_name": "detected-hockeyapp",
                "display_name": "DetectedHockeyapp",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Hockeyapp",
                "rule_params": "regex=(?i)hockey.{0,50}(\\\\\\\"|'|`)?[0-9a-f]{32}(\\\\\\\"|'|`)?\n\nmsg=HockeyApp detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Hockeyapp",
                "disable": false
            },
            {
                "real_name": "detected-jwt-token",
                "display_name": "DetectedJwtToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Jwt Token",
                "rule_params": "regex=eyJ[A-Za-z0-9-_=]{14,}\\.[A-Za-z0-9-_=]{13,}\\.?[A-Za-z0-9-_.+/=]*?\n\nmsg=JWT token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Jwt Token",
                "disable": false
            },
            {
                "real_name": "detected-kolide-api-key",
                "display_name": "DetectedKolideApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Kolide Api Key",
                "rule_params": "regex=k2sk_v[0-9]_[0-9a-zA-Z]{24}\n\nmsg=Kolide API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Kolide Api Key",
                "disable": false
            },
            {
                "real_name": "detected-mailchimp-api-key",
                "display_name": "DetectedMailchimpApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Mailchimp Api Key",
                "rule_params": "regex=[0-9a-f]{32}-us[0-9]{1,2}\n\nmsg=MailChimp API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Mailchimp Api Key",
                "disable": false
            },
            {
                "real_name": "detected-mailgun-api-key",
                "display_name": "DetectedMailgunApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Mailgun Api Key",
                "rule_params": "regex=key-[0-9a-zA-Z]{32}\n\nmsg=Mailgun API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Mailgun Api Key",
                "disable": false
            },
            {
                "real_name": "detected-npm-registry-auth-token",
                "display_name": "DetectedNpmRegistryAuthToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Npm Registry Auth Token",
                "rule_params": "regex=_authToken(\"|')?\\s{0,50}(:|=>|=)\\s{0,50}(\\w{8})-(\\w{4})-(\\w{4})-(\\w{4})-(\\w{12})$\n\nmsg=NPM registry authentication token detected\ninclude=*.npmrc",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Npm Registry Auth Token",
                "disable": false
            },
            {
                "real_name": "detected-npm-token",
                "display_name": "DetectedNpmToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Npm Token",
                "rule_params": "regex=\\/\\/.+\\/:_authToken=.+\n\nmsg=NPM token\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Npm Token",
                "disable": false
            },
            {
                "real_name": "detected-outlook-team",
                "display_name": "DetectedOutlookTeam",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Outlook Team",
                "rule_params": "regex=https://outlook\\.office\\.com/webhook/[0-9a-f-]{36}\n\nmsg=Outlook Team detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Outlook Team",
                "disable": false
            },
            {
                "real_name": "detected-paypal-braintree-access-token",
                "display_name": "DetectedPaypalBraintreeAccessToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Paypal Braintree Access Token",
                "rule_params": "regex=access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-z]{32}\n\nmsg=PayPal Braintree Access Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Paypal Braintree Access Token",
                "disable": false
            },
            {
                "real_name": "detected-pgp-private-key-block",
                "display_name": "DetectedPgpPrivateKeyBlock",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Pgp Private Key Block",
                "rule_params": "regex=-----BEGIN PGP PRIVATE KEY BLOCK-----\n\nmsg=PGP private key block detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Pgp Private Key Block",
                "disable": false
            },
            {
                "real_name": "detected-picatic-api-key",
                "display_name": "DetectedPicaticApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Picatic Api Key",
                "rule_params": "regex=sk_live_[0-9a-z]{32}\n\nmsg=Picatic API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Picatic Api Key",
                "disable": false
            },
            {
                "real_name": "detected-private-key",
                "display_name": "DetectedPrivateKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Private Key",
                "rule_params": "regex=-----BEGIN (?i)([dr]sa|ec|openssh|encrypted)?\\s?PRIVATE KEY-----\\n(.*)\n\nmsg=Private Key detected. This is a sensitive credential and should not be hardcoded here. Instead, store this in a separate, private file.\n\nmatch_group=2\nentropy=3",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Private Key",
                "disable": false
            },
            {
                "real_name": "detected-sauce-token",
                "display_name": "DetectedSauceToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Sauce Token",
                "rule_params": "regex=(?i)sauce.{0,50}(\\\\\\\"|'|`)?[0-9a-f-]{36}(\\\\\\\"|'|`)?\n\nmsg=Sauce Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Sauce Token",
                "disable": false
            },
            {
                "real_name": "detected-sendgrid-api-key",
                "display_name": "DetectedSendgridApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Sendgrid Api Key",
                "rule_params": "regex=SG\\.[a-zA-Z0-9]{22}\\.[a-zA-Z0-9-]{43}\\b\n\nmsg=SendGrid API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Sendgrid Api Key",
                "disable": false
            },
            {
                "real_name": "detected-slack-token",
                "display_name": "DetectedSlackToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Slack Token",
                "rule_params": "regex=(xox[pboa]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})\nregex1=xox.-[0-9]{12}-[0-9]{12}-[0-9a-zA-Z]{24}\n\nmsg=Slack Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Slack Token",
                "disable": false
            },
            {
                "real_name": "detected-slack-webhook",
                "display_name": "DetectedSlackWebhook",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Slack Webhook",
                "rule_params": "regex=https://hooks\\.slack\\.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}\n\nmsg=Slack Webhook detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Slack Webhook",
                "disable": false
            },
            {
                "real_name": "detected-snyk-api-key",
                "display_name": "DetectedSnykApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Snyk Api Key",
                "rule_params": "regex=(?i)snyk.{0,50}['|\"|`]?[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}['\"\\s]?\n\nmsg=Snyk API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Snyk Api Key",
                "disable": false
            },
            {
                "real_name": "detected-softlayer-api-key",
                "display_name": "DetectedSoftlayerApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Softlayer Api Key",
                "rule_params": "regex=(?i)softlayer.{0,50}[\"|'|`]?[a-z0-9]{64}[\"|'|`]?\n\nmsg=SoftLayer API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Softlayer Api Key",
                "disable": false
            },
            {
                "real_name": "detected-sonarqube-docs-api-key",
                "display_name": "DetectedSonarqubeDocsApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Sonarqube Docs Api Key",
                "rule_params": "regex=(?i)sonar.{0,50}(\\\\\\\"|'|`)?[0-9a-f]{40}(\\\\\\\"|'|`)?\n\nmsg=SonarQube Docs API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Sonarqube Docs Api Key",
                "disable": false
            },
            {
                "real_name": "detected-sql-dump",
                "display_name": "DetectedSqlDump",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Sql Dump",
                "rule_params": "regex=Dumping data for table `.*`\n\nmsg=SQL dump detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Sql Dump",
                "disable": false
            },
            {
                "real_name": "detected-square-access-token",
                "display_name": "DetectedSquareAccessToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Square Access Token",
                "rule_params": "regex=sq0atp-[0-9A-Za-z\\-_]{22}\n\nmsg=Square Access Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Square Access Token",
                "disable": false
            },
            {
                "real_name": "detected-square-oauth-secret",
                "display_name": "DetectedSquareOauthSecret",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Square Oauth Secret",
                "rule_params": "regex=sq0csp-[0-9A-Za-z\\\\\\-_]{43}\n\nmsg=Square OAuth Secret detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Square Oauth Secret",
                "disable": false
            },
            {
                "real_name": "detected-ssh-password",
                "display_name": "DetectedSshPassword",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Ssh Password",
                "rule_params": "regex=sshpass -p.*['|\\\\\\\"]\n\nmsg=SSH Password detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Ssh Password",
                "disable": false
            },
            {
                "real_name": "detected-stripe-api-key",
                "display_name": "DetectedStripeApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Stripe Api Key",
                "rule_params": "regex=sk_live_[0-9a-zA-Z]{24}\n\nmsg=Stripe API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Stripe Api Key",
                "disable": false
            },
            {
                "real_name": "detected-stripe-restricted-api-key",
                "display_name": "DetectedStripeRestrictedApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Stripe Restricted Api Key",
                "rule_params": "regex=rk_live_[0-9a-zA-Z]{24}\n\nmsg=Stripe Restricted API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Stripe Restricted Api Key",
                "disable": false
            },
            {
                "real_name": "detected-telegram-bot-api-key",
                "display_name": "DetectedTelegramBotApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Telegram Bot Api Key",
                "rule_params": "regex=(.*)([^A-Za-z\\-_][0-9]+:AA[0-9A-Za-z\\-_]{33})\nregex_not=go\\.mod.*\nregex_not1=v[\\d]+\\.[\\d]+\\.[\\d]+.*\nmsg=Telegram Bot API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Telegram Bot Api Key",
                "disable": false
            },
            {
                "real_name": "detected-twilio-api-key",
                "display_name": "DetectedTwilioApiKey",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Twilio Api Key",
                "rule_params": "regex=SK[0-9a-fA-F]{32}\n\nmsg=Twilio API Key detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Twilio Api Key",
                "disable": false
            },
            {
                "real_name": "detected-twitter-access-token",
                "display_name": "DetectedTwitterAccessToken",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Twitter Access Token",
                "rule_params": "regex=[tT][wW][iI][tT][tT][eE][rR].*[1-9][0-9]+-[0-9a-zA-Z]{40}\n\nmsg=Twitter Access Token detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Twitter Access Token",
                "disable": false
            },
            {
                "real_name": "detected-twitter-oauth",
                "display_name": "DetectedTwitterOauth",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Twitter Oauth",
                "rule_params": "regex=([tT][wW][iI][tT][tT][eE][rR].*['|\"]?[0-9a-zA-Z]{35,44}['|\"]?)\n\nmsg=Twitter OAuth detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Twitter Oauth",
                "disable": false
            },
            {
                "real_name": "detected-username-and-password-in-uri",
                "display_name": "DetectedUsernameAndPasswordInUri",
                "severity": "error",
                "category": "security",
                "rule_title": "Detected Username And Password In Uri",
                "rule_params": "regex=([\\w+]{1,24})(://)([^$<]{1})([^\\s\";]{1,}):([^$<]{1})([^\\s\";]{1,})@[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,24}([^\\s]+)\n\nmsg=Username and password in URI detected\n",
                "custom": false,
                "languages": [],
                "solution": "",
                "owner": "",
                "labels": [],
                "description": "Detected Username And Password In Uri",
                "disable": false
            }
        ],
        "open_user": true,
        "open_saas": false
    }
]